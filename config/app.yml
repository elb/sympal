all:

  sympal:
    extended_actions_class:  sfSympalActions

  sympal_config:

    # Configure internationalization
    i18n: false

    # Configure the default culture
    default_culture: en

    # Configure the available languages
    language_codes: []
    
    # used for outputting date published slot. See sfDateFormat::getPattern()
    # http://trac.symfony-project.org/browser/branches/1.4/lib/i18n/sfDateFormat.class.php
    date_published_format: D

    # Configure the default rendering module and action
    default_rendering_module: sympal_content_renderer
    default_rendering_action: index

    # Configure what to do when you access some content that is not published yet
    unpublished_content:
      forward_to: [sympal_default, unpublished_content]
      forward_404: false
    
    internationalized_models:
      sfSympalSite: [page_title, meta_keywords, meta_description]
      sfSympalContent: [i18n_slug, page_title, meta_keywords, meta_description]
      sfSympalContentSlot: [value]
      sfSympalContentList: [title]
      sfSympalPage: [title]

    # Configure the available content templates for the different content types
    # Every content type must have a template named "default_view"
    content_types:
      sfSympalContentList:
        default_rendering_module: ~
        default_rendering_action: ~
        content_templates:
          default_view:
            template: sympal_content_list/view


    # Configure and customize the available content slot types
    content_slot_types:
      #MySlotType:
      #  label: Label of My Slot Type
      #  form: MySlotForm                        default: sfSympalInlineEditContentSlotForm
      #  form_renderer: some_module/form_partial default: sympal_edit_slot/slot_editor_form
      #  widget_class: MySlotTypeWidget          default: sfWidgetFormSympalXXXXXXType
      #  widget_options: []
      #  validator_class: MySlotTypeValidator    default: sfValidatorFormSympalXXXXXXType
      #  validator_options: []
      #  transformers:    []
      Text:
        label: Single Line of Text
        filters: [inline_object]
      RawHtml:
        label: Raw HTML
        filters: [inline_object]
      Markdown:
        label: Markdown Editor
        filters: [inline_object, markdown]
        stylesheets:  [markdown.css]

      TinyMCE:
        label: TinyMCE Rich Text Editor
        widget_options:
          # allows tinymce to be seen as the current editor for inline object insertion
          config: 'handle_event_callback : "sympalHandleTinyMCEEvent"'
        filters: [inline_object]
      
      # special slot type for "column" slots where the widget/validator
      # from the content or content type form are used instead of those listed here
      Column:
        label:  Field Default
        widget_class:    false
        validator_class: false
        filters:   [inline_object]

    # The base query class to use - sfSympalDoctrineQuery adds easy query caching
    query_class:      sfSympalDoctrineQuery

    # Enable and disable the orm cache globally or control individual queries
    orm_cache:
      enabled: true
      result: false
      lifetime: 86400
      queries:
        sympal_get_content_types:
          enabled: true
          lifetime: 86400
        sympal_get_user:
          enabled: true
          lifetime: 86400
        sympal_context_get_site:
          enabled: true
          lifetime: 86400
        sympal_get_content:
          enabled: true
          lifetime: 86400

    # Callback to retrieve the cache driver used for storing various Sympal cache entries
    get_cache_driver_callback: [sfSympalCache, getCacheDriver]

    # Configure the available formats to render content in
    content_formats:
      - html
      - atom
      - feed
      - atom1
      - rss
      - rss10
      - rss091
      - rss201
      - xml
      - yml
      - json
